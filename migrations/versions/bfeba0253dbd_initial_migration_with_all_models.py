"""Initial migration with all models

Revision ID: bfeba0253dbd
Revises: 
Create Date: 2025-09-13 15:02:07.052907

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bfeba0253dbd'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('events',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('venue', sa.String(length=255), nullable=False),
    sa.Column('event_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_capacity', sa.Integer(), nullable=False),
    sa.Column('available_capacity', sa.Integer(), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('has_seat_selection', sa.Boolean(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('available_capacity <= total_capacity', name='ck_events_capacity_consistency'),
    sa.CheckConstraint('available_capacity >= 0', name='ck_events_available_capacity_non_negative'),
    sa.CheckConstraint('price >= 0', name='ck_events_price_non_negative'),
    sa.CheckConstraint('total_capacity > 0', name='ck_events_total_capacity_positive'),
    sa.CheckConstraint('version > 0', name='ck_events_version_positive'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_events_event_date'), 'events', ['event_date'], unique=False)
    op.create_index(op.f('ix_events_id'), 'events', ['id'], unique=False)
    op.create_index(op.f('ix_events_name'), 'events', ['name'], unique=False)
    op.create_table('users',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email', name='uq_users_email')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('bookings',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('event_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'CANCELLED', 'EXPIRED', name='bookingstatus'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('quantity > 0', name='ck_bookings_quantity_positive'),
    sa.CheckConstraint('total_amount >= 0', name='ck_bookings_total_amount_non_negative'),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bookings_event_id'), 'bookings', ['event_id'], unique=False)
    op.create_index(op.f('ix_bookings_expires_at'), 'bookings', ['expires_at'], unique=False)
    op.create_index(op.f('ix_bookings_id'), 'bookings', ['id'], unique=False)
    op.create_index(op.f('ix_bookings_status'), 'bookings', ['status'], unique=False)
    op.create_index(op.f('ix_bookings_user_id'), 'bookings', ['user_id'], unique=False)
    op.create_table('seats',
    sa.Column('event_id', sa.UUID(), nullable=False),
    sa.Column('section', sa.String(length=50), nullable=False),
    sa.Column('row', sa.String(length=10), nullable=False),
    sa.Column('number', sa.String(length=10), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('status', sa.Enum('AVAILABLE', 'HELD', 'BOOKED', 'BLOCKED', name='seatstatus'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('price >= 0', name='ck_seats_price_non_negative'),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('event_id', 'section', 'row', 'number', name='uq_seats_event_location')
    )
    op.create_index(op.f('ix_seats_event_id'), 'seats', ['event_id'], unique=False)
    op.create_index(op.f('ix_seats_id'), 'seats', ['id'], unique=False)
    op.create_index(op.f('ix_seats_status'), 'seats', ['status'], unique=False)
    op.create_table('waitlist',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('event_id', sa.UUID(), nullable=False),
    sa.Column('requested_quantity', sa.Integer(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'NOTIFIED', 'EXPIRED', 'CONVERTED', name='waitliststatus'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('position > 0', name='ck_waitlist_position_positive'),
    sa.CheckConstraint('requested_quantity > 0', name='ck_waitlist_quantity_positive'),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'event_id', name='uq_waitlist_user_event')
    )
    op.create_index(op.f('ix_waitlist_event_id'), 'waitlist', ['event_id'], unique=False)
    op.create_index(op.f('ix_waitlist_id'), 'waitlist', ['id'], unique=False)
    op.create_index(op.f('ix_waitlist_position'), 'waitlist', ['position'], unique=False)
    op.create_index(op.f('ix_waitlist_status'), 'waitlist', ['status'], unique=False)
    op.create_index(op.f('ix_waitlist_user_id'), 'waitlist', ['user_id'], unique=False)
    op.create_table('booking_history',
    sa.Column('booking_id', sa.UUID(), nullable=False),
    sa.Column('action', sa.Enum('CREATED', 'CONFIRMED', 'CANCELLED', 'EXPIRED', 'MODIFIED', name='bookingaction'), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('performed_by', sa.String(length=255), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_booking_history_action'), 'booking_history', ['action'], unique=False)
    op.create_index(op.f('ix_booking_history_booking_id'), 'booking_history', ['booking_id'], unique=False)
    op.create_index(op.f('ix_booking_history_id'), 'booking_history', ['id'], unique=False)
    op.create_table('seat_bookings',
    sa.Column('booking_id', sa.UUID(), nullable=False),
    sa.Column('seat_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['seat_id'], ['seats.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('booking_id', 'seat_id', name='uq_seat_bookings_booking_seat')
    )
    op.create_index(op.f('ix_seat_bookings_booking_id'), 'seat_bookings', ['booking_id'], unique=False)
    op.create_index(op.f('ix_seat_bookings_id'), 'seat_bookings', ['id'], unique=False)
    op.create_index(op.f('ix_seat_bookings_seat_id'), 'seat_bookings', ['seat_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_seat_bookings_seat_id'), table_name='seat_bookings')
    op.drop_index(op.f('ix_seat_bookings_id'), table_name='seat_bookings')
    op.drop_index(op.f('ix_seat_bookings_booking_id'), table_name='seat_bookings')
    op.drop_table('seat_bookings')
    op.drop_index(op.f('ix_booking_history_id'), table_name='booking_history')
    op.drop_index(op.f('ix_booking_history_booking_id'), table_name='booking_history')
    op.drop_index(op.f('ix_booking_history_action'), table_name='booking_history')
    op.drop_table('booking_history')
    op.drop_index(op.f('ix_waitlist_user_id'), table_name='waitlist')
    op.drop_index(op.f('ix_waitlist_status'), table_name='waitlist')
    op.drop_index(op.f('ix_waitlist_position'), table_name='waitlist')
    op.drop_index(op.f('ix_waitlist_id'), table_name='waitlist')
    op.drop_index(op.f('ix_waitlist_event_id'), table_name='waitlist')
    op.drop_table('waitlist')
    op.drop_index(op.f('ix_seats_status'), table_name='seats')
    op.drop_index(op.f('ix_seats_id'), table_name='seats')
    op.drop_index(op.f('ix_seats_event_id'), table_name='seats')
    op.drop_table('seats')
    op.drop_index(op.f('ix_bookings_user_id'), table_name='bookings')
    op.drop_index(op.f('ix_bookings_status'), table_name='bookings')
    op.drop_index(op.f('ix_bookings_id'), table_name='bookings')
    op.drop_index(op.f('ix_bookings_expires_at'), table_name='bookings')
    op.drop_index(op.f('ix_bookings_event_id'), table_name='bookings')
    op.drop_table('bookings')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_events_name'), table_name='events')
    op.drop_index(op.f('ix_events_id'), table_name='events')
    op.drop_index(op.f('ix_events_event_date'), table_name='events')
    op.drop_table('events')
    # ### end Alembic commands ###
